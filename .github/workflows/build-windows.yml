name: build(Windows)
on:
  pull_request:
  release:
    types: [published]
  push:
    tags:
    branches:
      - main
      - develop
      - "*" # For testing purposes

env:
  CLANG_TIDY_VERSION: "15.0.2"
  VERBOSE: 1

jobs:
  Test:
    runs-on: windows-latest
    strategy:
      fail-fast: false

      # Recommendations:
      #   * support at least 2 operating systems
      #   * support at least 2 compilers
      #   * make sure all supported configurations for your project are built
      #
      # Disable/enable builds in this list to meet the above recommendations
      # and your own projects needs
      matrix:
        preset:
          - windows-msvc-debug
          - windows-msvc-release
          - windows-clang-debug
          - windows-clang-release

    steps:
      - uses: actions/checkout@v3

      # TODO: Add caching with presets
      # - name: Setup Cache
      #   uses: ./.github/actions/setup_cache
      #   with:
      #     compiler: ${{ matrix.compiler }}
      #     build_type: ${{ matrix.build_type }}
      #     packaging_maintainer_mode: ${{ matrix.packaging_maintainer_mode }}
      #     generator: ${{ matrix.generator }}

      - name: Project Name
        uses: cardinalby/export-env-action@v2
        with:
          envFile: ".github/constants.env"

      - name: Install dependencies
        run: |
          choco install visualstudio2022buildtools
          "C:\Program Files (x86)\Microsoft Visual Studio\Installer\setup.exe" modify --config ".vsconfig"
          choco install ccache
          choco install cppcheck
          choco install opencppcoverage

      - name: Configure CMake
        run: |
          cmake -S . -B ./build --preset ${{matrix.preset}} -D${{ env.PROJECT_NAME }}_ENABLE_COVERAGE:BOOL=${{ contains(matrix.preset,'debug') }} -DGIT_SHA:STRING=${{ github.sha }}

      - name: Build
        # Execute the build.
        run: |
          cmake --build ./build

      - name: Windows - Test and coverage
        working-directory: ./build
        run: |
          OpenCppCoverage.exe --export_type cobertura:coverage.xml --cover_children -- ctest --preset ${{matrix.preset}}

      - name: Publish to codecov
        uses: codecov/codecov-action@v2
        with:
          flags: ${{ runner.os }}
          name: ${{ runner.os }}-coverage
          files: ./build/coverage.xml
